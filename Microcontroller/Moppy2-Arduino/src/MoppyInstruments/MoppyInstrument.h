/*
 * MoppyInstrument.h
 * Stores useful constants for MoppyInstrument implementations
 */

#ifndef MOPPY_SRC_MOPPYINSTRUMENTS_MOPPYINSTRUMENT_H_
#define MOPPY_SRC_MOPPYINSTRUMENTS_MOPPYINSTRUMENT_H_

#include "../MoppyMessageConsumer.h"
#include <Arduino.h>

// Number of octaves to bend notes by at full-deflection (MIDI pitch bending is weird).
// Described as cents/cents-in-an-octave
#define BEND_OCTAVES 200/(float)1200

/*
 * Number of microseconds in a timer-tick for setting timer resolution
 * and calculating noteTicks.  Smaller values here will trigger interrupts more often,
 * which might interfere with other processes but will result in more accurate frequency
 * reproduction.
 */
#ifdef ARDUINO_ARCH_AVR
#define TIMER_RESOLUTION 40
#elif ARDUINO_ARCH_ESP8266
#define TIMER_RESOLUTION 20 // Higher resolution for the faster processor
#endif

// In some cases a pulse will only happen every-other tick (e.g. if the tick is
// toggling a pin on and off and pulses happen on rising signal) so to simplify
// the already ugly arrays below, multiply the RESOLUTION by 2 here.
#define DOUBLE_T_RESOLUTION (TIMER_RESOLUTION*2)

// The period of notes in microseconds
const unsigned int notePeriods[128] = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  61162, 57737, 54496, 51414, 48544, 45809, 43253, 40816, 38521, 36364, 34317, 32394, //C0 - B0
  30581, 28860, 27241, 25714, 24272, 22910, 21622, 20408, 19264, 18182, 17161, 16197, //C1 - B1
  15288, 14430, 13620, 12857, 12134, 11453, 10811, 10204, 9631, 9091, 8581, 8099, //C2 - B2
  7645, 7216, 6811, 6428, 6068, 5727, 5405, 5102, 4816, 4545, 4290, 4050, //C3 - B3
  3822, 3608, 3405, 3214, 3034, 2863, 2703, 2551, 2408, 2273, 2145, 2025, //C4 - B4
  1911, 1804, 1703, 1607, 1517, 1432, 1351, 1276, 1204, 1136, 1073, 1012, //C5 - B5
  956, 902, 851, 804, 758, 716, 676, 638, 602, 568, 536, 506, //C6 - B6
  478, 451, 426, 402, 379, 358, 338, 319, 301, 284, 268, 253, //C7 - B7
  239, 225, 213, 201, 190, 179, 169, 159, 150, 142, 134, 127,//C8 - B8
  0, 0, 0, 0, 0, 0, 0, 0
};

// NOTE: Yes this is super ugly, but it avoids having to calculate this at runtime.  Changes
// to notePeriods above will require matching changes here
// The period of notes in two-tick units
const unsigned int noteDoubleTicks[128] = {
    0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION,
    61162/DOUBLE_T_RESOLUTION, 57737/DOUBLE_T_RESOLUTION, 54496/DOUBLE_T_RESOLUTION, 51414/DOUBLE_T_RESOLUTION, 48544/DOUBLE_T_RESOLUTION, 45809/DOUBLE_T_RESOLUTION, 43253/DOUBLE_T_RESOLUTION, 40816/DOUBLE_T_RESOLUTION, 38521/DOUBLE_T_RESOLUTION, 36364/DOUBLE_T_RESOLUTION, 34317/DOUBLE_T_RESOLUTION, 32394/DOUBLE_T_RESOLUTION, //C0 - B0
    30581/DOUBLE_T_RESOLUTION, 28860/DOUBLE_T_RESOLUTION, 27241/DOUBLE_T_RESOLUTION, 25714/DOUBLE_T_RESOLUTION, 24272/DOUBLE_T_RESOLUTION, 22910/DOUBLE_T_RESOLUTION, 21622/DOUBLE_T_RESOLUTION, 20408/DOUBLE_T_RESOLUTION, 19264/DOUBLE_T_RESOLUTION, 18182/DOUBLE_T_RESOLUTION, 17161/DOUBLE_T_RESOLUTION, 16197/DOUBLE_T_RESOLUTION, //C1 - B1
    15288/DOUBLE_T_RESOLUTION, 14430/DOUBLE_T_RESOLUTION, 13620/DOUBLE_T_RESOLUTION, 12857/DOUBLE_T_RESOLUTION, 12134/DOUBLE_T_RESOLUTION, 11453/DOUBLE_T_RESOLUTION, 10811/DOUBLE_T_RESOLUTION, 10204/DOUBLE_T_RESOLUTION, 9631/DOUBLE_T_RESOLUTION, 9091/DOUBLE_T_RESOLUTION, 8581/DOUBLE_T_RESOLUTION, 8099/DOUBLE_T_RESOLUTION, //C2 - B2
    7645/DOUBLE_T_RESOLUTION, 7216/DOUBLE_T_RESOLUTION, 6811/DOUBLE_T_RESOLUTION, 6428/DOUBLE_T_RESOLUTION, 6068/DOUBLE_T_RESOLUTION, 5727/DOUBLE_T_RESOLUTION, 5405/DOUBLE_T_RESOLUTION, 5102/DOUBLE_T_RESOLUTION, 4816/DOUBLE_T_RESOLUTION, 4545/DOUBLE_T_RESOLUTION, 4290/DOUBLE_T_RESOLUTION, 4050/DOUBLE_T_RESOLUTION, //C3 - B3
    3822/DOUBLE_T_RESOLUTION, 3608/DOUBLE_T_RESOLUTION, 3405/DOUBLE_T_RESOLUTION, 3214/DOUBLE_T_RESOLUTION, 3034/DOUBLE_T_RESOLUTION, 2863/DOUBLE_T_RESOLUTION, 2703/DOUBLE_T_RESOLUTION, 2551/DOUBLE_T_RESOLUTION, 2408/DOUBLE_T_RESOLUTION, 2273/DOUBLE_T_RESOLUTION, 2145/DOUBLE_T_RESOLUTION, 2025/DOUBLE_T_RESOLUTION, //C4 - B4
    1911/DOUBLE_T_RESOLUTION, 1804/DOUBLE_T_RESOLUTION, 1703/DOUBLE_T_RESOLUTION, 1607/DOUBLE_T_RESOLUTION, 1517/DOUBLE_T_RESOLUTION, 1432/DOUBLE_T_RESOLUTION, 1351/DOUBLE_T_RESOLUTION, 1276/DOUBLE_T_RESOLUTION, 1204/DOUBLE_T_RESOLUTION, 1136/DOUBLE_T_RESOLUTION, 1073/DOUBLE_T_RESOLUTION, 1012/DOUBLE_T_RESOLUTION, //C5 - B5
    956/DOUBLE_T_RESOLUTION, 902/DOUBLE_T_RESOLUTION, 851/DOUBLE_T_RESOLUTION, 804/DOUBLE_T_RESOLUTION, 758/DOUBLE_T_RESOLUTION, 716/DOUBLE_T_RESOLUTION, 676/DOUBLE_T_RESOLUTION, 638/DOUBLE_T_RESOLUTION, 602/DOUBLE_T_RESOLUTION, 568/DOUBLE_T_RESOLUTION, 536/DOUBLE_T_RESOLUTION, 506/DOUBLE_T_RESOLUTION, //C6 - B6
    478/DOUBLE_T_RESOLUTION, 451/DOUBLE_T_RESOLUTION, 426/DOUBLE_T_RESOLUTION, 402/DOUBLE_T_RESOLUTION, 379/DOUBLE_T_RESOLUTION, 358/DOUBLE_T_RESOLUTION, 338/DOUBLE_T_RESOLUTION, 319/DOUBLE_T_RESOLUTION, 301/DOUBLE_T_RESOLUTION, 284/DOUBLE_T_RESOLUTION, 268/DOUBLE_T_RESOLUTION, 253/DOUBLE_T_RESOLUTION, //C7 - B7
    239/DOUBLE_T_RESOLUTION, 225/DOUBLE_T_RESOLUTION, 213/DOUBLE_T_RESOLUTION, 201/DOUBLE_T_RESOLUTION, 190/DOUBLE_T_RESOLUTION, 179/DOUBLE_T_RESOLUTION, 169/DOUBLE_T_RESOLUTION, 159/DOUBLE_T_RESOLUTION, 150/DOUBLE_T_RESOLUTION, 142/DOUBLE_T_RESOLUTION, 134/DOUBLE_T_RESOLUTION, 127/DOUBLE_T_RESOLUTION, //C8 - B8
    0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION, 0/DOUBLE_T_RESOLUTION,0/DOUBLE_T_RESOLUTION
};

const unsigned int noteTicks[128] = {
    0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION,
    61162/TIMER_RESOLUTION, 57737/TIMER_RESOLUTION, 54496/TIMER_RESOLUTION, 51414/TIMER_RESOLUTION, 48544/TIMER_RESOLUTION, 45809/TIMER_RESOLUTION, 43253/TIMER_RESOLUTION, 40816/TIMER_RESOLUTION, 38521/TIMER_RESOLUTION, 36364/TIMER_RESOLUTION, 34317/TIMER_RESOLUTION, 32394/TIMER_RESOLUTION, //C0 - B0
    30581/TIMER_RESOLUTION, 28860/TIMER_RESOLUTION, 27241/TIMER_RESOLUTION, 25714/TIMER_RESOLUTION, 24272/TIMER_RESOLUTION, 22910/TIMER_RESOLUTION, 21622/TIMER_RESOLUTION, 20408/TIMER_RESOLUTION, 19264/TIMER_RESOLUTION, 18182/TIMER_RESOLUTION, 17161/TIMER_RESOLUTION, 16197/TIMER_RESOLUTION, //C1 - B1
    15288/TIMER_RESOLUTION, 14430/TIMER_RESOLUTION, 13620/TIMER_RESOLUTION, 12857/TIMER_RESOLUTION, 12134/TIMER_RESOLUTION, 11453/TIMER_RESOLUTION, 10811/TIMER_RESOLUTION, 10204/TIMER_RESOLUTION, 9631/TIMER_RESOLUTION, 9091/TIMER_RESOLUTION, 8581/TIMER_RESOLUTION, 8099/TIMER_RESOLUTION, //C2 - B2
    7645/TIMER_RESOLUTION, 7216/TIMER_RESOLUTION, 6811/TIMER_RESOLUTION, 6428/TIMER_RESOLUTION, 6068/TIMER_RESOLUTION, 5727/TIMER_RESOLUTION, 5405/TIMER_RESOLUTION, 5102/TIMER_RESOLUTION, 4816/TIMER_RESOLUTION, 4545/TIMER_RESOLUTION, 4290/TIMER_RESOLUTION, 4050/TIMER_RESOLUTION, //C3 - B3
    3822/TIMER_RESOLUTION, 3608/TIMER_RESOLUTION, 3405/TIMER_RESOLUTION, 3214/TIMER_RESOLUTION, 3034/TIMER_RESOLUTION, 2863/TIMER_RESOLUTION, 2703/TIMER_RESOLUTION, 2551/TIMER_RESOLUTION, 2408/TIMER_RESOLUTION, 2273/TIMER_RESOLUTION, 2145/TIMER_RESOLUTION, 2025/TIMER_RESOLUTION, //C4 - B4
    1911/TIMER_RESOLUTION, 1804/TIMER_RESOLUTION, 1703/TIMER_RESOLUTION, 1607/TIMER_RESOLUTION, 1517/TIMER_RESOLUTION, 1432/TIMER_RESOLUTION, 1351/TIMER_RESOLUTION, 1276/TIMER_RESOLUTION, 1204/TIMER_RESOLUTION, 1136/TIMER_RESOLUTION, 1073/TIMER_RESOLUTION, 1012/TIMER_RESOLUTION, //C5 - B5
    956/TIMER_RESOLUTION, 902/TIMER_RESOLUTION, 851/TIMER_RESOLUTION, 804/TIMER_RESOLUTION, 758/TIMER_RESOLUTION, 716/TIMER_RESOLUTION, 676/TIMER_RESOLUTION, 638/TIMER_RESOLUTION, 602/TIMER_RESOLUTION, 568/TIMER_RESOLUTION, 536/TIMER_RESOLUTION, 506/TIMER_RESOLUTION, //C6 - B6
    478/TIMER_RESOLUTION, 451/TIMER_RESOLUTION, 426/TIMER_RESOLUTION, 402/TIMER_RESOLUTION, 379/TIMER_RESOLUTION, 358/TIMER_RESOLUTION, 338/TIMER_RESOLUTION, 319/TIMER_RESOLUTION, 301/TIMER_RESOLUTION, 284/TIMER_RESOLUTION, 268/TIMER_RESOLUTION, 253/TIMER_RESOLUTION, //C7 - B7
    239/TIMER_RESOLUTION, 225/TIMER_RESOLUTION, 213/TIMER_RESOLUTION, 201/TIMER_RESOLUTION, 190/TIMER_RESOLUTION, 179/TIMER_RESOLUTION, 169/TIMER_RESOLUTION, 159/TIMER_RESOLUTION, 150/TIMER_RESOLUTION, 142/TIMER_RESOLUTION, 134/TIMER_RESOLUTION, 127/TIMER_RESOLUTION, //C8 - B8
    0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION, 0/TIMER_RESOLUTION
};

class MoppyInstrument : public MoppyMessageConsumer {
public:
    virtual void setup() = 0;
};

#endif /* MOPPY_SRC_MOPPYINSTRUMENTS_MOPPYINSTRUMENT_H_ */
